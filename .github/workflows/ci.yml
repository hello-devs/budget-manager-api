name: Continuous Integration

on:
  push: ~
  #    branches: [ "develop" ]
  pull_request: ~
#    branches: [ "develop" ]

permissions:
  contents: read


jobs:
  #job 1
  code-quality:
    name: Quality revue with php-cs-fixer and phpstan -- PHP${{ matrix.php-versions }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '8.1' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl

      - name: Set composer cache directory
        id: composer-cache
        run: echo "COMPOSER_CACHE=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.COMPOSER_CACHE }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Composer Install PHP-CS-Fixer
        run: cd tools/php-cs-fixer && composer install --ansi --prefer-dist --no-interaction --no-progress

      - name: Check code quality
        run: composer check-quality


  #job 2
  code-tests:
    name: Test with Pest -- PHP${{ matrix.php-versions }}
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres_test
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php-versions:
          - '8.1'
#          - '8.2'
        include:
          - php-versions: 8.1
            current-dev: true
#          - php-versions: 8.2
#            current-dev: false


    steps:
      - name: "Checkout"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql

      - name: "Install PHP"
        uses: actions/checkout@v3
      #    - name: Copy .env.test.local
      #      run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      - name: Set composer cache directory
        id: composer-cache
        run: echo "COMPOSER_CACHE=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.COMPOSER_CACHE }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

#      - name: "Update Dependencies"
#        if: "contains(matrix.current-dev, false)"
#        run: composer update -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist -W

      - name: "Install Dependencies"
        if: "contains(matrix.current-dev, true)"
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-dev

      - name: "Run Migration"
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?charset=UTF-8
        run: |
          composer require --dev symfony/orm-pack
          php bin/console --env=test doctrine:migrations:migrate || echo "No migrations found or migration failed"

      - name: "Generate LexikJWT Keys"
        run: bin/console lexik:jwt:generate-keypair --skip-if-exists

      - name: " Execute tests"
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?charset=UTF-8
          SYMFONY_DEPRECATIONS_HELPER: disabled
        run: vendor/bin/pest tests